@model PagedList.IPagedList<BanSach.Models.DonHang>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Quản lý đơn hàng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<link rel="stylesheet" href="https://cdn.datatables.net/2.2.2/css/dataTables.dataTables.css" />
<script src="https://cdn.datatables.net/2.2.2/js/dataTables.js"></script>
<script src="~/Content/js/DataTables.js"></script>
<script src="~/Content/js/ThongBao.js"></script>
<style>
   
    /* Thêm màu sắc cho các trạng thái đơn hàng */
    .status-waiting {
        color: orange;
        font-weight: bold;
    }

    .status-confirmed {
        color: green;
        font-weight: bold;
    }

    .status-received {
        color: blue;
        font-weight: bold;
    }

    .status-cancelled {
        color: red;
        font-weight: bold;
    }

    /* Search bar styling */
    .search-bar {
        max-width: 400px;
        margin: 0 auto 20px auto;
    }
</style>

<h2 class="text-center fw-semibold mt-2 mb-2 ">Quản lý đơn hàng</h2>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert" id="successAlert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorAlert">
        @TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="text-left mb-0 mt-3 text-dark font-weight-bold">
    <p>Tổng đơn hàng: @Model.TotalItemCount</p>
</div>
<!-- Thêm liên kết tới trang Thống kê đơn hàng -->

@using (Html.BeginForm("ConfirmAll", "DonHangs", FormMethod.Post))
{
    <div class="d-flex ">
        <p>
            @Html.ActionLink("Thống kê", "ThongKeDonHang", "DonHangs", null, new { @class = "btn btn-success mb-0 rounded-sm mx-1" })
        </p>
        @Html.AntiForgeryToken()
        <p class="form-group">
            <button type="submit" class="btn btn-dark mb-0 rounded-sm" onclick="return confirm('Bạn có chắc chắn muốn xác nhận tất cả đơn hàng?');">Xác nhận ALL</button>
        </p>
    </div>
}

<!-- Orders Table -->
<table id="myTable" class="table-bordered table-responsive-sm mt-0 " style="width:100%;">
    <thead class="text-white" style="background-color:black;">
        <tr>
            <th>Mã ĐH</th>
            <th>ID và Tên KH</th>
            <th>Ngày ĐH</th>
            <th>Tổng số tiền</th>
            <th>PTT Toán</th>
            <th>Trạng thái ĐH</th>
            <th>#</th>
        </tr>
    </thead>
    <tbody style="color:black;">
        @foreach (var item in Model)
        {
            <tr>
                <td class="font-weight-bold">@item.IDdh</td>
                <td class="font-weight-bold">
                    @Html.DisplayFor(modelItem => item.KhachHang.IDkh) - @Html.DisplayFor(modelItem => item.KhachHang.TenKH)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NgayDatHang)
                </td>
                <td class="text-danger font-weight-bold">
                    @item.GetTongSoTien().ToString("N0") VND
                </td>

                <td class="font-weight-bold">
                    Tiền mặt
                </td>
                <td>
                    @{
                        string statusClass = "status-waiting"; // Default to waiting status
                        string displayStatus = "Chờ xử lý"; // Default display status

                        if (!string.IsNullOrEmpty(item.TrangThai))
                        {
                            displayStatus = item.TrangThai;
                            switch (item.TrangThai)
                            {
                                case "Đã xác nhận":
                                    statusClass = "status-confirmed";
                                    break;
                                case "Đã huỷ":
                                    statusClass = "status-cancelled";
                                    break;
                                case "Đã nhận hàng":
                                    statusClass = "status-received";
                                    break;
                                default:
                                    statusClass = "status-waiting";
                                    break;
                            }
                        }
                    }
                    <span class="@statusClass">@displayStatus</span>
                </td>
                <td style="width:240px;">
                    @if (item.TrangThai == null || item.TrangThai == "Chờ xử lý")
                    {
                        @Html.ActionLink("Xác nhận", "Confirm", new { id = item.IDdh }, new { @class = "btn btn-success btn-sm btn-action rounded mx-1", onclick = "return confirm('Bạn có chắc chắn muốn xác nhận đơn hàng này?');" })
                        @Html.ActionLink("Huỷ", "Cancel", new { id = item.IDdh }, new { @class = "btn btn-danger btn-sm btn-action rounded mx-1", onclick = "return confirm('Bạn có chắc chắn muốn huỷ đơn hàng này?');" })
                    }
                    @Html.ActionLink("Xoá", "Delete", new { id = item.IDdh }, new { @class = "btn btn-warning btn-sm btn-action rounded mx-1", onclick = "return confirm('Bạn có chắc chắn muốn xoá đơn hàng này?');" })
                    @Html.ActionLink("In", "PrintInvoice", new { id = item.IDdh }, new { @class = "btn btn-primary btn-sm btn-action rounded mx-1" })
                </td>
            </tr>
        }
    </tbody>
</table>


@Scripts.Render("~/bundles/datatables")
